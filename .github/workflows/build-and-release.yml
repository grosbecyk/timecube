name: Build and Release

on:
  push:
    tags:
      - "v*"  # Trigger on tags like v1.0.0, v2.0.0, etc.

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up build environment
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Set up build environment (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake

      - name: Set up build environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Build plugin
        run: |
          mkdir build
          cd build
          cmake ..
          make

      - name: Package artifacts
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            cp vscube.so dist/
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            cp vscube.dylib dist/
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            cp vscube.dll dist/
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vscube-${{ matrix.os }}
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/vscube-ubuntu-latest/vscube.so
          asset_name: vscube-linux.so
          asset_content_type: application/octet-stream

      - name: Upload release assets (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/vscube-macos-latest/vscube.dylib
          asset_name: vscube-macos.dylib
          asset_content_type: application/octet-stream

      - name: Upload release assets (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/vscube-windows-latest/vscube.dll
          asset_name: vscube-windows.dll
          asset_content_type: application/octet-stream